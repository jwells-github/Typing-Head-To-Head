{"version":3,"sources":["TypingProgress.js","Player.js","GameInput.js","GameTimer.js","Game.js","WelcomePage.js","Chatbox.js","ModeSelection.js","PrivateRoom.js","App.js","reportWebVitals.js","index.js"],"names":["TypingProgress","wordList","i","this","props","words","length","itemClass","progress","opponent","push","className","Component","Player","soloGame","passageTitle","username","winLoss","recordWPM","wpm","typingFinished","GameInput","raceWinner","onClick","playAgain","leaveGame","gameStarted","id","onInput","compareInput","autoComplete","disabled","GameTimer","timer","minutes","Math","floor","seconds","toFixed","displayMinutesAndSeconds","typingTimer","gameCountDown","Game","state","playerPosition","opponentPosition","typingStartTime","typingEndTime","playerWPM","opponentWPM","socket","on","position","setState","bind","winnerID","isWinner","emit","calculateWPM","_words","time","Date","now","setInterval","clearInterval","document","getElementById","focus","off","typingTime","standardisedWordCount","slice","join","round","event","input","target","value","inputChar","substring","currentWord","style","background","gameData","passage","text","split","_userData","playerOne","playerTwo","_opponentData","_passageTitle","title","WelcomePage","preventDefault","usernameInput","trim","storeUsername","onSubmit","setUsername","placeholder","checkUsernameLength","type","ChatBox","chat","scrollTop","scrollHeight","chatMessage","updateChat","roomName","chatMessages","submitChatMessage","ModeSelection","searchingForGame","privateRoomNameError","isWaiting","roomInput","isIllegalRoomName","joinPrivateRoom","room","matchesPublicWaitingRoom","test","matchesMatchmaking","playersInPublicRoom","findGame","Chatbox","findSoloGame","PrivateRoom","playersInRoom","size","privateRoom","class","findPrivateGame","leaveRoom","App","socketIOClient","gameMatched","publicChatHistory","privateChatHistory","console","log","updatePublicChat","updatePrivateChat","concat","createChatMessage","leavePrivateRoom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9fc9c5d2.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\n\r\nclass TypingProgress extends Component {\r\n  render(){\r\n    let wordList = [];\r\n    for(var i = 0; i < this.props.words.length; i++){\r\n      let itemClass = \"word \"\r\n      if(i < this.props.progress ){\r\n        itemClass += this.props.opponent ? \"opponentCompletedWord\" : \"playerCompletedWord\"\r\n      }\r\n      else if(i === this.props.progress && !this.props.opponent){\r\n        if(!this.props.opponent){\r\n          itemClass += \"currentWord\"\r\n        }\r\n      }\r\n      wordList.push(<li className={itemClass} key={i}>{this.props.words[i]}</li>)\r\n    }\r\n    return(\r\n      <ul>\r\n        {wordList}    \r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TypingProgress;","import React, {Component} from 'react'\r\nimport TypingProgress from './TypingProgress';\r\n\r\nclass Player extends Component {  \r\n  render(){\r\n    if(this.props.soloGame){\r\n      return(<div></div>)\r\n    }\r\n    let  passageTitle = <div>\r\n      <span className=\"passageTitle\">This was a passage from {this.props.passageTitle}</span>\r\n    </div>\r\n    return(\r\n      <div>\r\n        <div>\r\n          <h2>{this.props.username}</h2>\r\n          <div className=\"playerStatistics\">\r\n            <span>{this.props.winLoss}</span>\r\n            <span>Record WPM {this.props.recordWPM}</span>\r\n          </div>\r\n          <h2>{this.props.wpm} WPM</h2>\r\n        </div>\r\n          <div className=\"typingProgress\">\r\n            <TypingProgress opponent={this.props.opponent} words={this.props.words} progress={this.props.progress}/>\r\n            {this.props.typingFinished && !this.props.soloGame ? passageTitle : ''}\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Player;","import React, {Component} from 'react'\r\n\r\nclass GameInput extends Component {\r\n  render(){\r\n    if(this.props.typingFinished){  \r\n      return(\r\n        <div className=\"gameFinishedDialogue\">\r\n          <h1>{this.props.raceWinner ? \"You win!\" : \"You lose\"}</h1>\r\n          <button onClick={this.props.playAgain}>Play again</button>\r\n          <button onClick={this.props.leaveGame}>Leave game</button>\r\n        </div>\r\n      )\r\n    }\r\n    else if(!this.props.gameStarted){\r\n      return(\r\n        <div>\r\n          <input id=\"TypingInput\" disabled=\"disabled\"/>\r\n        </div>\r\n      )\r\n    }\r\n    else{\r\n      return(\r\n        <div>\r\n          <input id=\"TypingInput\" onInput={this.props.compareInput} autoComplete=\"off\"/>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default GameInput;","import React, {Component} from 'react'\r\n\r\nclass GameTimer extends Component {\r\n  displayMinutesAndSeconds(timer){\r\n    let minutes = Math.floor(timer / 60000);\r\n    let seconds = ((timer % 60000) / 1000).toFixed(0);\r\n    return (seconds === 60 ? (minutes+1) + \":00\" : minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds);\r\n  }\r\n\r\n  render(){\r\n    if(!this.props.gameStarted){\r\n      return(<h1>Game starting in {this.props.gameCountDown} </h1>)\r\n    }\r\n    else{\r\n      return(<h1>{this.displayMinutesAndSeconds(this.props.typingTimer)}</h1>)\r\n    }\r\n  }\r\n}\r\n\r\nexport default GameTimer;","import React, {Component} from 'react'\r\nimport './App.css';\r\nimport Player from './Player';\r\nimport GameInput from './GameInput';\r\nimport GameTimer from './GameTimer';\r\n\r\nconst avgCharactersInWord = 5;\r\n\r\nclass Game extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      playerPosition : 0,\r\n      opponentPosition: 0,\r\n      gameCountDown: 5,\r\n      gameStarted : false,\r\n      typingFinished: false,\r\n      raceWinner: false,\r\n      typingStartTime : 0,\r\n      typingEndTime: 0,\r\n      typingTimer: 0,\r\n      playerWPM: 0,\r\n      opponentWPM: 0,\r\n    } \r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.socket.on('updateOpponentPosition', function(position){\r\n      this.setState({opponentPosition : position})\r\n    }.bind(this))\r\n    this.props.socket.on('endRace', function(winnerID){\r\n      let isWinner = this.props.socket.id === winnerID\r\n      // Do not update user stats after finishing a solo game\r\n      if(!this.props.soloGame){\r\n        this.props.socket.emit('raceStats', this.calculateWPM(this.state.playerPosition), isWinner)\r\n      }\r\n      this.setState({\r\n        typingFinished: true, \r\n        raceWinner : isWinner,\r\n        opponentPosition: isWinner ? this.state.opponentPosition : this._words.length,\r\n        playerWPM: this.calculateWPM(this.state.playerPosition),\r\n        opponentWPM: this.calculateWPM(isWinner ? this.state.opponentPosition : this._words.length)\r\n      })  \r\n    }.bind(this))\r\n    this.props.socket.on('countdown', function(time){\r\n      let gameStarted = time < 1\r\n        this.setState(\r\n        {\r\n          gameCountDown : time,\r\n          gameStarted: gameStarted,\r\n          typingStartTime : Date.now()\r\n        });\r\n      if(gameStarted){\r\n        this.timer = setInterval(() => {\r\n          if(this.state.typingFinished){\r\n            clearInterval(this.timer)\r\n            return;\r\n          }\r\n          this.setState({\r\n            typingTimer : Date.now() - this.state.typingStartTime,\r\n            playerWPM: this.calculateWPM(this.state.playerPosition),\r\n            opponentWPM : this.calculateWPM(this.state.opponentPosition)})\r\n        }, 1000);\r\n        document.getElementById(\"TypingInput\").focus();\r\n      }\r\n    }.bind(this))\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    clearInterval(this.timer)\r\n    this.props.socket.off('updateOpponentPosition');\r\n    this.props.socket.off('endRace');\r\n    this.props.socket.off('countdown');\r\n  }\r\n\r\n  calculateWPM(position){\r\n    let typingTime = Date.now()\r\n    let standardisedWordCount = this._words.slice(0,position).join(' ').length / avgCharactersInWord\r\n    let wpm = Math.round(standardisedWordCount / ((typingTime - this.state.typingStartTime ) / 60000))\r\n    return wpm\r\n  }\r\n\r\n  compareInput(event){\r\n    let input = event.target.value\r\n    let inputChar = input.substring(event.target.value.length-1,input.length)\r\n    let currentWord = this._words[this.state.playerPosition]\r\n    if(inputChar === \" \"){\r\n      if(input.substring(0,input.length-1) === currentWord){\r\n        event.target.value = \"\"\r\n        event.target.style.background = \"white\"\r\n        this.props.socket.emit('wordComplete', this.state.playerPosition + 1)\r\n        this.setState({\r\n          playerPosition: this.state.playerPosition +1,\r\n        })\r\n        return\r\n      }\r\n    }\r\n    // Final word\r\n    if(this.state.playerPosition +1 >= this._words.length){\r\n      if(input === currentWord){\r\n        this.props.socket.emit('raceComplete');\r\n        this.setState({\r\n          playerPosition: this.state.playerPosition +1,\r\n          typingFinished: true,\r\n          typingEndTime : Date.now(),\r\n          raceWinner: true\r\n        })\r\n      }\r\n    }\r\n    if (currentWord.substring(0,input.length) !== input){\r\n      event.target.style.background = \"red\"\r\n    }\r\n    else{\r\n      event.target.style.background = \"white\"\r\n    }\r\n  }\r\n\r\n  playAgain(){\r\n    this.setState({\r\n      playerPosition : 0,\r\n      opponentPosition: 0,\r\n      gameCountDown: 5,\r\n      gameStarted : false,\r\n      typingFinished: false,\r\n      raceWinner: false,\r\n      typingStartTime : 0,\r\n      typingEndTime: 0,\r\n      typingTimer: 0,\r\n      playerWPM: 0,\r\n      opponentWPM: 0,\r\n    })\r\n    this.props.playAgain()\r\n  }\r\n\r\n  render(){\r\n    this._words = this.props.gameData.passage.text.split(' ');\r\n    this._userData = this.props.gameData.playerOne.id === this.props.socket.id ? this.props.gameData.playerOne : this.props.gameData.playerTwo;\r\n    this._opponentData = this.props.gameData.playerOne.id !== this.props.socket.id ? this.props.gameData.playerOne : this.props.gameData.playerTwo;\r\n    this._passageTitle = this.props.gameData.passage.title;\r\n\r\n    return (\r\n      <div className=\"Game\">\r\n        <GameTimer\r\n          gameStarted = {this.state.gameStarted}\r\n          gameCountDown = {this.state.gameCountDown}\r\n          typingTimer = {this.state.typingTimer}/>\r\n        <div className=\"players\">\r\n          <div className=\"playerOne\">\r\n            <Player \r\n              opponent={false} \r\n              username={this.props.username}\r\n              wpm={this.state.playerWPM} \r\n              recordWPM={this._userData.recordWPM}\r\n              winLoss={this._userData.winLoss}\r\n              progress={this.state.playerPosition}\r\n              words={this._words}\r\n              passageTitle = {this._passageTitle}\r\n              typingFinished = {this.state.typingFinished}\r\n              />\r\n            <div>\r\n              <GameInput\r\n                typingFinished={this.state.typingFinished}\r\n                raceWinner={this.state.raceWinner}\r\n                playAgain={this.playAgain.bind(this)}\r\n                leaveGame={this.props.leaveGame}\r\n                gameStarted={this.state.gameStarted}\r\n                compareInput ={this.compareInput.bind(this)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            {this.props.soloGame ? <span></span> : <span className=\"versus\">VS</span>}\r\n          </div>\r\n          <div className={this.props.soloGame ? \"\" : \"playerTwo\"}>\r\n            <Player \r\n              opponent={true} \r\n              username={this._opponentData.username}\r\n              recordWPM={this._opponentData.recordWPM}\r\n              winLoss={this._opponentData.winLoss}\r\n              wpm={this.state.opponentWPM} \r\n              progress={this.state.opponentPosition}\r\n              words={this._words}\r\n              soloGame={this.props.soloGame}\r\n              />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React, {Component} from 'react'\r\n\r\nconst MAX_USERNAME_LENGTH = 12\r\nclass WelcomePage extends Component {\r\n\r\n  setUsername(event){\r\n    event.preventDefault();\r\n    let usernameInput = document.getElementById(\"username\").value.trim();\r\n    if(usernameInput === \"\" || usernameInput.length > MAX_USERNAME_LENGTH){\r\n      return;\r\n    }\r\n    this.props.storeUsername(usernameInput)\r\n    this.props.socket.emit(\"setUsername\", usernameInput);\r\n  }\r\n\r\n  checkUsernameLength(event){\r\n\r\n    if(event.target.value.length > MAX_USERNAME_LENGTH){\r\n      event.target.value = event.target.value.substring(0,MAX_USERNAME_LENGTH)\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(  \r\n    <div id=\"welcomePage\">\r\n      <h1>Typing Head-To-Head</h1>\r\n      <p>Typing Head-To-Head is a game that can be played solo or against an opponent. Players are given a passage of text and are challenged to type it as quickly as possible</p>\r\n      <p>Enter a username to play!</p>\r\n      <div>\r\n        <form onSubmit={this.setUsername.bind(this)}>\r\n          <input id='username' placeholder=\"Your username\" onInput={this.checkUsernameLength.bind(this)}></input>\r\n          <button type=\"submit\">Enter</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WelcomePage;","import React, {Component} from 'react'\r\n\r\nclass ChatBox extends Component {\r\n\r\n  componentDidUpdate(){\r\n    // Scroll chat to bottom\r\n    var chat = document.getElementById(\"chatMessages\");\r\n    chat.scrollTop = chat.scrollHeight;\r\n  }\r\n\r\n  submitChatMessage(event){\r\n    event.preventDefault();\r\n    let chatMessage = document.getElementById('chatInput').value.trim();\r\n    if(chatMessage === ''){\r\n      return;\r\n    }\r\n    // append message to chat\r\n    this.props.updateChat(this.props.username,chatMessage)\r\n    // broadcast message to other users\r\n    this.props.socket.emit('sendChatMessage',this.props.username, chatMessage, this.props.roomName)\r\n    document.getElementById('chatInput').value = \"\"\r\n  }\r\n  \r\n  render(){\r\n    return(  \r\n      <div className=\"chatbox\">\r\n        <ul id=\"chatMessages\">\r\n          <li className='systemChatMessage'>Welcome to the chat room, please be pleasant!</li>\r\n          {this.props.chatMessages}\r\n        </ul>\r\n        <form onSubmit={this.submitChatMessage.bind(this)}>\r\n          <input id=\"chatInput\" autoComplete=\"off\" />\r\n          <button>Send</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ChatBox;","import React, {Component} from 'react'\r\nimport Chatbox from './Chatbox'\r\n\r\nclass ModeSelection extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      searchingForGame: false,\r\n      privateRoomNameError: false,\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    this.props.socket.on('inWaiting', function(isWaiting){\r\n      this.setState({searchingForGame : isWaiting})\r\n    }.bind(this))\r\n\r\n  }\r\n  componentWillUnmount(){\r\n    this.props.socket.off('inWaiting');\r\n  }\r\n\r\n  joinPrivateRoom(event){\r\n    event.preventDefault();\r\n    let roomInput = document.getElementById(\"privateRoom\");\r\n    if(roomInput.value.trim() === \"\"){\r\n      return;\r\n    }    \r\n    if(this.isIllegalRoomName(roomInput.value.trim())){\r\n      this.setState({privateRoomNameError: true})\r\n      return;\r\n    }\r\n    this.props.joinPrivateRoom(roomInput.value.trim());\r\n    roomInput.value = \"\";\r\n  }\r\n\r\n  isIllegalRoomName(room){\r\n    var matchesPublicWaitingRoom = /\\bpublicWaitingRoom\\b/.test(room);\r\n    // -MATCHMAKING is appended to a user's room when they enter machmaking\r\n    var matchesMatchmaking = /-MATCHMAKING$/.test(room);\r\n    return matchesPublicWaitingRoom || matchesMatchmaking;\r\n  }\r\n\r\n  render(){\r\n    return(  \r\n      <div>\r\n        <h1>Typing Head-To-Head</h1>\r\n        <h2>{this.props.playersInPublicRoom} {this.props.playersInPublicRoom === 1 ? 'user' : 'users'} connected</h2>\r\n        <div className=\"gameModes\">\r\n          <div className=\"gameMode\">\r\n            <h2>Public Head-To-Head</h2>\r\n            <div className=\"gameDescription\">\r\n              <div>\r\n                <p>Match against another random player in a head-to-head battle to determine who is the superior typist!</p>\r\n                <p>The outcome of games will count towards your total number of Wins and Losses. Your personal best typing speed will also be recorded</p>\r\n              </div>\r\n              <button className=\"playButton\" onClick={this.props.findGame.bind(this)}>{this.state.searchingForGame ? \"Leave queue\" : \"Find a Game\"}</button> \r\n            </div>\r\n            <Chatbox \r\n              socket={this.props.socket}\r\n              username={this.props.username}\r\n              chatMessages = {this.props.chatMessages}\r\n              updateChat ={(username,chatMessage) =>this.props.updateChat(username,chatMessage)}\r\n              roomName={''} // Empty string signifies public room\r\n            />\r\n          </div>\r\n          <div className=\"gameMode\">\r\n            <h2>Solo Practice Game</h2>\r\n            <div className=\"gameDescription\">\r\n              <div>\r\n                <p>Play a game by yourself to hone your typing skills, warm up or just to play without the stress of competition</p>\r\n                <p>The outcome of games will <span className=\"underline\">not</span> count towards your total number of Wins and Losses. Your personal best typing speed will <span className=\"underline\">not</span> be recorded</p>\r\n              </div>\r\n              <button onClick={this.props.findSoloGame.bind(this)} className=\"playButton\">Play Solo</button>\r\n            </div>\r\n          </div>\r\n          <div className=\"gameMode\">\r\n            <h2>Join a Private Gameroom</h2>\r\n            <div className=\"gameDescription\">\r\n              <div>\r\n                <p>Filter your matchmaking to only play against players in the same private room as you.</p>\r\n                <p>The outcome of games will count towards your total number of Wins and Losses. Your personal best typing speed will also be recorded</p>\r\n                <form onSubmit={this.joinPrivateRoom.bind(this)}>\r\n                  <input id='privateRoom' placeholder=\"Room name\"></input>\r\n                  <button className=\"playButton\" type=\"submit\">Join</button>\r\n                  {this.state.privateRoomNameError ? <span className=\"errorMessage\">Your room name contains a reserved phrase. Please select a new name</span> : ''}\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ModeSelection;","import React, {Component} from 'react'\r\nimport Chatbox from './Chatbox'\r\n\r\nclass PrivateRoom extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      searchingForGame: false,\r\n      playersInRoom: 0\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.socket.on('inWaiting', function(isWaiting){\r\n      this.setState({searchingForGame : isWaiting})\r\n    }.bind(this))\r\n    this.props.socket.on('privateRoomSize', function(size){\r\n      this.setState({playersInRoom : size})\r\n    }.bind(this))\r\n  }\r\n  componentWillUnmount(){\r\n    this.props.socket.off('inWaiting');\r\n    this.props.socket.off('privateRoomSize');\r\n  }\r\n\r\n  render(){\r\n    return(  \r\n      <div>\r\n        <div className='gameModes'>\r\n          <h1>Private Room: {this.props.privateRoom}</h1>\r\n          <h2>There is currently {this.state.playersInRoom} {this.state.playersInRoom === 1 ? 'user' : 'users'} in this room</h2>\r\n          <div className='gameMode'>\r\n            <div class=\"privateRoomButtons\">\r\n              <button onClick={this.props.findPrivateGame.bind(this)}>{this.state.searchingForGame ? \"Leave queue\" : \"Find a Game\"}</button> \r\n              <button onClick={this.props.leaveRoom.bind(this)}>Leave private room</button>\r\n            </div>\r\n              <Chatbox \r\n                socket={this.props.socket}\r\n                username={this.props.username}\r\n                chatMessages = {this.props.chatMessages}\r\n                updateChat ={(username,chatMessage) =>this.props.updateChat(username,chatMessage)}\r\n                roomName={this.props.privateRoom}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PrivateRoom;","import React, {Component} from 'react'\nimport Game from './Game';\nimport './App.css';\nimport socketIOClient from \"socket.io-client\";\nimport WelcomePage from './WelcomePage';\nimport ModeSelection from './ModeSelection';\nimport PrivateRoom from './PrivateRoom';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      socket: socketIOClient(),\n      username: '',\n      soloGame: false,\n      privateRoom: '',\n      gameMatched:false,\n      gameData: {},\n      playersInPublicRoom: 0, \n      publicChatHistory : [],\n      privateChatHistory: []\n    }\n  }\n  componentDidMount(){\n    this.state.socket.on('gameReady', function(gameData){\n      this.setState({\n        gameMatched:true,\n        gameData: gameData,\n      })\n    }.bind(this))\n    this.state.socket.on('publicRoomSize', function(size){\n      this.setState({playersInPublicRoom : size})\n    }.bind(this))\n    this.state.socket.on('updatePublicChat', function(username, chatMessage){\n      console.log('public')\n      this.updatePublicChat(username, chatMessage);\n    }.bind(this))\n    this.state.socket.on('updatePrivateChat', function(username, chatMessage){\n      console.log('private')\n      this.updatePrivateChat(username, chatMessage);\n    }.bind(this))\n  }\n\n  updatePublicChat(username,chatMessage){\n    this.setState({\n      publicChatHistory : this.state.publicChatHistory.concat(this.createChatMessage(username,chatMessage))\n    });\n  }\n\n  updatePrivateChat(username,chatMessage){\n    this.setState({\n      privateChatHistory : this.state.privateChatHistory.concat(this.createChatMessage(username,chatMessage))\n    });\n  }\n\n  createChatMessage(username, chatMessage){\n    return         <li key={username+Date.now()}>\n      <span className=\"chatUsername\">{username}:</span>\n      <span className=\"chatMessage\">{chatMessage}</span>\n    </li>\n  }\n\n  findGame(){\n    this.setState({gameMatched: false})\n    this.state.socket.emit('toggleMatchmaking', this.state.privateRoom)\n  }\n\n  findSoloGame(){\n    this.setState({soloGame: true, gameMatched: false})\n    this.state.socket.emit(\"soloGame\")\n  }\n\n  joinPrivateRoom(room){\n    this.state.socket.emit('joinPrivateRoom', room)\n    this.setState({\n      gameMatched: false,\n      privateRoom: room,\n    })\n  }\n\n  leavePrivateRoom(room){\n    this.state.socket.emit('leavePrivateRoom', room)\n    this.setState({\n      privateRoom: '',\n      privateChatHistory: []\n    })\n  }\n\n  leaveGame(){  \n    this.setState({\n      soloGame: false,\n      gameMatched:false,\n      words: []\n    })\n  }\n  playAgain(){\n    if(this.state.soloGame){\n      this.state.socket.emit(\"soloGame\")\n    }\n    else{\n      this.findGame()\n    }\n  }\n\n  render(){\n    if(this.state.username === ''){\n      return(\n        <div className=\"App\">\n          <WelcomePage \n            storeUsername={(username) => this.setState({username:username})}\n            socket={this.state.socket}/>\n        </div>\n      )\n    }\n    if(this.state.gameMatched){\n      return (\n        <div className=\"App\">\n          <Game \n            soloGame ={this.state.soloGame}\n            playAgain={()=>this.playAgain()}\n            username={this.state.username}\n            gameData={this.state.gameData} \n            socket={this.state.socket}\n            leaveGame={()=>this.leaveGame()}  />\n        </div>\n      )\n    }\n    else{\n      if(this.state.privateRoom !== ''){\n        return(\n          <div className=\"App\">\n            <PrivateRoom\n              socket = {this.state.socket}\n              username = {this.state.username}\n              privateRoom = {this.state.privateRoom}\n              findPrivateGame = {()=>this.findGame()}\n              leaveRoom = {()=>this.leavePrivateRoom()}\n              chatMessages ={this.state.privateChatHistory}\n              updateChat ={(username,chatMessage) => this.updatePrivateChat(username,chatMessage)}/>\n          </div>\n        )\n      }\n      return (\n        <div className=\"App\">\n          <ModeSelection \n            socket={this.state.socket}\n            username = {this.state.username}\n            playersInPublicRoom ={this.state.playersInPublicRoom}\n            findGame ={()=>this.findGame()}\n            findSoloGame={()=>this.findSoloGame()}\n            joinPrivateRoom={(room)=>this.joinPrivateRoom(room)}\n            chatMessages={this.state.publicChatHistory}\n            updateChat ={(username,chatMessage) => this.updatePublicChat(username,chatMessage)}\n            />\n        </div>\n      )\n    }\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}