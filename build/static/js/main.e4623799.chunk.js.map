{"version":3,"sources":["TypingProgress.js","Player.js","GameInput.js","GameTimer.js","Game.js","WelcomePage.js","Chatbox.js","ModeSelection.js","PrivateRoom.js","App.js","reportWebVitals.js","index.js"],"names":["TypingProgress","wordList","i","this","props","words","length","itemClass","progress","opponent","push","className","Component","Player","soloGame","usernameAppend","passageTitle","username","winLoss","recordWPM","wpm","typingFinished","GameInput","raceWinner","onClick","playAgain","leaveGame","gameStarted","id","onInput","compareInput","autoComplete","disabled","GameTimer","timer","minutes","Math","floor","seconds","toFixed","displayMinutesAndSeconds","typingTimer","gameCountDown","Game","state","playerPosition","opponentPosition","typingStartTime","typingEndTime","playerWPM","opponentWPM","socket","on","position","setState","bind","winnerID","isWinner","emit","calculateWPM","_words","time","Date","now","setInterval","clearInterval","document","getElementById","focus","off","typingTime","standardisedWordCount","slice","join","round","event","input","target","value","inputChar","substring","currentWord","style","background","gameData","passage","text","split","_userData","playerOne","playerTwo","_opponentData","_passageTitle","title","WelcomePage","preventDefault","usernameInput","trim","storeUsername","onSubmit","setUsername","placeholder","checkUsernameLength","type","ChatBox","chat","scrollTop","scrollHeight","chatMessage","updateChat","roomName","chatMessages","submitChatMessage","ModeSelection","searchingForGame","privateRoomNameError","isWaiting","roomInput","isIllegalRoomName","joinPrivateRoom","room","matchesPublicWaitingRoom","test","matchesMatchmaking","playersInPublicRoom","findGame","Chatbox","findSoloGame","PrivateRoom","playersInRoom","size","privateRoom","class","findPrivateGame","leaveRoom","App","socketIOClient","gameMatched","publicChatHistory","privateChatHistory","updatePublicChat","updatePrivateChat","concat","createChatMessage","leavePrivateRoom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e4623799.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\n\r\nclass TypingProgress extends Component {\r\n  render(){\r\n    let wordList = [];\r\n    for(var i = 0; i < this.props.words.length; i++){\r\n      let itemClass = \"word \"\r\n      if(i < this.props.progress ){\r\n        itemClass += this.props.opponent ? \"opponentCompletedWord\" : \"playerCompletedWord\"\r\n      }\r\n      else if(i === this.props.progress && !this.props.opponent){\r\n        if(!this.props.opponent){\r\n          itemClass += \"currentWord\"\r\n        }\r\n      }\r\n      wordList.push(<li className={itemClass} key={i}>{this.props.words[i]}</li>)\r\n    }\r\n    return(\r\n      <ul>\r\n        {wordList}    \r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TypingProgress;","import React, {Component} from 'react'\r\nimport TypingProgress from './TypingProgress';\r\n\r\nclass Player extends Component {  \r\n  render(){\r\n    if(this.props.soloGame && this.props.opponent){\r\n      return(<div></div>)\r\n    }\r\n    let usernameAppend = this.props.soloGame ? '' : (this.props.opponent ? '' : '(You)')\r\n    let  passageTitle = <div>\r\n      <span className=\"passageTitle\">This was a passage from {this.props.passageTitle}</span>\r\n    </div>\r\n    return(\r\n      <div>\r\n        <div>\r\n          <h2>{this.props.username} {usernameAppend}</h2>\r\n          <div className=\"playerStatistics\">\r\n            <span>{this.props.winLoss}</span>\r\n            <span>Record WPM {this.props.recordWPM}</span>\r\n          </div>\r\n          <h2>{this.props.wpm} WPM</h2>\r\n        </div>\r\n          <div className=\"typingProgress\">\r\n            <TypingProgress opponent={this.props.opponent} words={this.props.words} progress={this.props.progress}/>\r\n            {this.props.typingFinished && !this.props.soloGame ? passageTitle : ''}\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Player;","import React, {Component} from 'react'\r\n\r\nclass GameInput extends Component {\r\n  render(){\r\n    if(this.props.typingFinished){  \r\n      return(\r\n        <div className=\"gameFinishedDialogue\">\r\n          <div>\r\n            <h1>{this.props.raceWinner ? \"You win!\" : \"You lose\"}</h1>\r\n          </div>\r\n          <button onClick={this.props.playAgain}>Play again</button>\r\n          <button onClick={this.props.leaveGame}>Leave game</button>\r\n        </div>\r\n      )\r\n    }\r\n    else if(!this.props.gameStarted){\r\n      return(\r\n        <div>\r\n          <input id=\"TypingInput\" disabled=\"disabled\"/>\r\n        </div>\r\n      )\r\n    }\r\n    else{\r\n      return(\r\n        <div>\r\n          <input id=\"TypingInput\" onInput={this.props.compareInput} autoComplete=\"off\"/>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default GameInput;","import React, {Component} from 'react'\r\n\r\nclass GameTimer extends Component {\r\n  displayMinutesAndSeconds(timer){\r\n    let minutes = Math.floor(timer / 60000);\r\n    let seconds = ((timer % 60000) / 1000).toFixed(0);\r\n    return (seconds === 60 ? (minutes+1) + \":00\" : minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds);\r\n  }\r\n\r\n  render(){\r\n    if(!this.props.gameStarted){\r\n      return(<h1>Game starting in {this.props.gameCountDown} </h1>)\r\n    }\r\n    else{\r\n      return(<h1>{this.displayMinutesAndSeconds(this.props.typingTimer)}</h1>)\r\n    }\r\n  }\r\n}\r\n\r\nexport default GameTimer;","import React, {Component} from 'react'\r\nimport './App.css';\r\nimport Player from './Player';\r\nimport GameInput from './GameInput';\r\nimport GameTimer from './GameTimer';\r\n\r\nconst avgCharactersInWord = 5;\r\n\r\nclass Game extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      playerPosition : 0,\r\n      opponentPosition: 0,\r\n      gameCountDown: 5,\r\n      gameStarted : false,\r\n      typingFinished: false,\r\n      raceWinner: false,\r\n      typingStartTime : 0,\r\n      typingEndTime: 0,\r\n      typingTimer: 0,\r\n      playerWPM: 0,\r\n      opponentWPM: 0,\r\n    } \r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.socket.on('updateOpponentPosition', function(position){\r\n      this.setState({opponentPosition : position})\r\n    }.bind(this))\r\n    this.props.socket.on('endRace', function(winnerID){\r\n      let isWinner = this.props.socket.id === winnerID\r\n      // Do not update user stats after finishing a solo game\r\n      if(!this.props.soloGame){\r\n        this.props.socket.emit('raceStats', this.calculateWPM(this.state.playerPosition), isWinner)\r\n      }\r\n      this.setState({\r\n        typingFinished: true, \r\n        raceWinner : isWinner,\r\n        opponentPosition: isWinner ? this.state.opponentPosition : this._words.length,\r\n        playerWPM: this.calculateWPM(this.state.playerPosition),\r\n        opponentWPM: this.calculateWPM(isWinner ? this.state.opponentPosition : this._words.length)\r\n      })  \r\n    }.bind(this))\r\n    this.props.socket.on('countdown', function(time){\r\n      let gameStarted = time < 1\r\n        this.setState(\r\n        {\r\n          gameCountDown : time,\r\n          gameStarted: gameStarted,\r\n          typingStartTime : Date.now()\r\n        });\r\n      if(gameStarted){\r\n        this.timer = setInterval(() => {\r\n          if(this.state.typingFinished){\r\n            clearInterval(this.timer)\r\n            return;\r\n          }\r\n          this.setState({\r\n            typingTimer : Date.now() - this.state.typingStartTime,\r\n            playerWPM: this.calculateWPM(this.state.playerPosition),\r\n            opponentWPM : this.calculateWPM(this.state.opponentPosition)})\r\n        }, 1000);\r\n        document.getElementById(\"TypingInput\").focus();\r\n      }\r\n    }.bind(this))\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    clearInterval(this.timer)\r\n    this.props.socket.off('updateOpponentPosition');\r\n    this.props.socket.off('endRace');\r\n    this.props.socket.off('countdown');\r\n  }\r\n\r\n  calculateWPM(position){\r\n    let typingTime = Date.now()\r\n    let standardisedWordCount = this._words.slice(0,position).join(' ').length / avgCharactersInWord\r\n    let wpm = Math.round(standardisedWordCount / ((typingTime - this.state.typingStartTime ) / 60000))\r\n    return wpm\r\n  }\r\n\r\n  compareInput(event){\r\n    let input = event.target.value\r\n    let inputChar = input.substring(event.target.value.length-1,input.length)\r\n    let currentWord = this._words[this.state.playerPosition]\r\n    if(inputChar === \" \"){\r\n      if(input.substring(0,input.length-1) === currentWord){\r\n        event.target.value = \"\"\r\n        event.target.style.background = \"white\"\r\n        this.props.socket.emit('wordComplete', this.state.playerPosition + 1)\r\n        this.setState({\r\n          playerPosition: this.state.playerPosition +1,\r\n        })\r\n        return\r\n      }\r\n    }\r\n    // Final word\r\n    if(this.state.playerPosition +1 >= this._words.length){\r\n      if(input === currentWord){\r\n        this.props.socket.emit('raceComplete');\r\n        this.setState({\r\n          playerPosition: this.state.playerPosition +1,\r\n          typingFinished: true,\r\n          typingEndTime : Date.now(),\r\n          raceWinner: true\r\n        })\r\n      }\r\n    }\r\n    if (currentWord.substring(0,input.length) !== input){\r\n      event.target.style.background = \"red\"\r\n    }\r\n    else{\r\n      event.target.style.background = \"white\"\r\n    }\r\n  }\r\n\r\n  playAgain(){\r\n    this.setState({\r\n      playerPosition : 0,\r\n      opponentPosition: 0,\r\n      gameCountDown: 5,\r\n      gameStarted : false,\r\n      typingFinished: false,\r\n      raceWinner: false,\r\n      typingStartTime : 0,\r\n      typingEndTime: 0,\r\n      typingTimer: 0,\r\n      playerWPM: 0,\r\n      opponentWPM: 0,\r\n    })\r\n    this.props.playAgain()\r\n  }\r\n\r\n  render(){\r\n    this._words = this.props.gameData.passage.text.split(' ');\r\n    this._userData = this.props.gameData.playerOne.id === this.props.socket.id ? this.props.gameData.playerOne : this.props.gameData.playerTwo;\r\n    this._opponentData = this.props.gameData.playerOne.id !== this.props.socket.id ? this.props.gameData.playerOne : this.props.gameData.playerTwo;\r\n    this._passageTitle = this.props.gameData.passage.title;\r\n\r\n    return (\r\n      <div className=\"Game\">\r\n        <GameTimer\r\n          gameStarted = {this.state.gameStarted}\r\n          gameCountDown = {this.state.gameCountDown}\r\n          typingTimer = {this.state.typingTimer}/>\r\n        <div className=\"players\">\r\n          <div className=\"playerOne\">\r\n            <Player \r\n              opponent={false} \r\n              username={this.props.username}\r\n              wpm={this.state.playerWPM} \r\n              recordWPM={this._userData.recordWPM}\r\n              winLoss={this._userData.winLoss}\r\n              progress={this.state.playerPosition}\r\n              words={this._words}\r\n              passageTitle = {this._passageTitle}\r\n              typingFinished = {this.state.typingFinished}\r\n              soloGame={this.props.soloGame}\r\n              />\r\n            <div className=\"gameInput\">\r\n              <GameInput\r\n                typingFinished={this.state.typingFinished}\r\n                raceWinner={this.state.raceWinner}\r\n                playAgain={this.playAgain.bind(this)}\r\n                leaveGame={this.props.leaveGame}\r\n                gameStarted={this.state.gameStarted}\r\n                compareInput ={this.compareInput.bind(this)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            {this.props.soloGame ? <span></span> : <span className=\"versus\">VS</span>}\r\n          </div>\r\n          <div className={this.props.soloGame ? \"\" : \"playerTwo\"}>\r\n            <Player \r\n              opponent={true} \r\n              username={this._opponentData.username}\r\n              recordWPM={this._opponentData.recordWPM}\r\n              winLoss={this._opponentData.winLoss}\r\n              wpm={this.state.opponentWPM} \r\n              progress={this.state.opponentPosition}\r\n              words={this._words}\r\n              soloGame={this.props.soloGame}\r\n              />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React, {Component} from 'react'\r\n\r\nconst MAX_USERNAME_LENGTH = 12\r\nclass WelcomePage extends Component {\r\n\r\n  setUsername(event){\r\n    event.preventDefault();\r\n    let usernameInput = document.getElementById(\"username\").value.trim();\r\n    if(usernameInput === \"\" || usernameInput.length > MAX_USERNAME_LENGTH){\r\n      return;\r\n    }\r\n    this.props.storeUsername(usernameInput)\r\n    this.props.socket.emit(\"setUsername\", usernameInput);\r\n  }\r\n\r\n  checkUsernameLength(event){\r\n\r\n    if(event.target.value.length > MAX_USERNAME_LENGTH){\r\n      event.target.value = event.target.value.substring(0,MAX_USERNAME_LENGTH)\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(  \r\n    <div id=\"welcomePage\">\r\n      <h1>Typing Head-To-Head</h1>\r\n      <p>Typing Head-To-Head is a game that can be played solo or against an opponent. Players are given a passage of text and are challenged to type it as quickly as possible</p>\r\n      <p>Enter a username to play!</p>\r\n      <div>\r\n        <form onSubmit={this.setUsername.bind(this)}>\r\n          <input id='username' placeholder=\"Your username\" onInput={this.checkUsernameLength.bind(this)}></input>\r\n          <button type=\"submit\">Enter</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WelcomePage;","import React, {Component} from 'react'\r\n\r\nclass ChatBox extends Component {\r\n\r\n  componentDidUpdate(){\r\n    // Scroll chat to bottom\r\n    var chat = document.getElementById(\"chatMessages\");\r\n    chat.scrollTop = chat.scrollHeight;\r\n  }\r\n\r\n  submitChatMessage(event){\r\n    event.preventDefault();\r\n    let chatMessage = document.getElementById('chatInput').value.trim();\r\n    if(chatMessage === ''){\r\n      return;\r\n    }\r\n    // append message to chat\r\n    this.props.updateChat(this.props.username,chatMessage)\r\n    // broadcast message to other users\r\n    this.props.socket.emit('sendChatMessage',this.props.username, chatMessage, this.props.roomName)\r\n    document.getElementById('chatInput').value = \"\"\r\n  }\r\n  \r\n  render(){\r\n    return(  \r\n      <div className=\"chatbox\">\r\n        <ul id=\"chatMessages\">\r\n          <li className='systemChatMessage'>Welcome to the chat room, please be pleasant!</li>\r\n          {this.props.chatMessages}\r\n        </ul>\r\n        <form onSubmit={this.submitChatMessage.bind(this)}>\r\n          <input id=\"chatInput\" autoComplete=\"off\" />\r\n          <button>Send</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ChatBox;","import React, {Component} from 'react'\r\nimport Chatbox from './Chatbox'\r\n\r\nclass ModeSelection extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      searchingForGame: false,\r\n      privateRoomNameError: false,\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    this.props.socket.on('inWaiting', function(isWaiting){\r\n      this.setState({searchingForGame : isWaiting})\r\n    }.bind(this))\r\n\r\n  }\r\n  componentWillUnmount(){\r\n    this.props.socket.off('inWaiting');\r\n  }\r\n\r\n  joinPrivateRoom(event){\r\n    event.preventDefault();\r\n    let roomInput = document.getElementById(\"privateRoom\");\r\n    if(roomInput.value.trim() === \"\"){\r\n      return;\r\n    }    \r\n    if(this.isIllegalRoomName(roomInput.value.trim())){\r\n      this.setState({privateRoomNameError: true})\r\n      return;\r\n    }\r\n    this.props.joinPrivateRoom(roomInput.value.trim());\r\n    roomInput.value = \"\";\r\n  }\r\n\r\n  isIllegalRoomName(room){\r\n    var matchesPublicWaitingRoom = /\\bpublicWaitingRoom\\b/.test(room);\r\n    // -MATCHMAKING is appended to a user's room when they enter machmaking\r\n    var matchesMatchmaking = /-MATCHMAKING$/.test(room);\r\n    return matchesPublicWaitingRoom || matchesMatchmaking;\r\n  }\r\n\r\n  render(){\r\n    return(  \r\n      <div>\r\n        <div>\r\n          <h1>Typing Head-To-Head</h1>\r\n        </div>\r\n        <div>\r\n          <h2>{this.props.playersInPublicRoom} {this.props.playersInPublicRoom === 1 ? 'user' : 'users'} connected</h2>\r\n        </div>\r\n        <div className=\"gameModes\">\r\n          <div className=\"gameMode\">\r\n            <h2>Public Head-To-Head</h2>\r\n            <div className=\"gameDescription\">\r\n              <div>\r\n                <p>Match against another random player in a head-to-head battle to determine who is the superior typist!</p>\r\n                <p>The outcome of games will count towards your total number of Wins and Losses. Your personal best typing speed will also be recorded</p>\r\n              </div>\r\n              <button className=\"playButton\" onClick={this.props.findGame.bind(this)}>{this.state.searchingForGame ? \"Leave queue\" : \"Find a Game\"}</button> \r\n            </div>\r\n            <Chatbox \r\n              socket={this.props.socket}\r\n              username={this.props.username}\r\n              chatMessages = {this.props.chatMessages}\r\n              updateChat ={(username,chatMessage) =>this.props.updateChat(username,chatMessage)}\r\n              roomName={''} // Empty string signifies public room\r\n            />\r\n          </div>\r\n          <div className=\"gameMode\">\r\n            <h2>Solo Practice Game</h2>\r\n            <div className=\"gameDescription\">\r\n              <div>\r\n                <p>Play a game by yourself to hone your typing skills, warm up or just to play without the stress of competition</p>\r\n                <p>The outcome of games will <span className=\"underline\">not</span> count towards your total number of Wins and Losses. Your personal best typing speed will <span className=\"underline\">not</span> be recorded</p>\r\n              </div>\r\n              <button onClick={this.props.findSoloGame.bind(this)} className=\"playButton\">Play Solo</button>\r\n            </div>\r\n          </div>\r\n          <div className=\"gameMode\">\r\n            <h2>Join a Private Gameroom</h2>\r\n            <div className=\"gameDescription\">\r\n              <div>\r\n                <p>Filter your matchmaking to only play against players in the same private room as you.</p>\r\n                <p>The outcome of games will count towards your total number of Wins and Losses. Your personal best typing speed will also be recorded</p>\r\n                <form onSubmit={this.joinPrivateRoom.bind(this)}>\r\n                  <input id='privateRoom' placeholder=\"Room name\"></input>\r\n                  <button className=\"playButton\" type=\"submit\">Join</button>\r\n                  {this.state.privateRoomNameError ? <span className=\"errorMessage\">Your room name contains a reserved phrase. Please select a new name</span> : ''}\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ModeSelection;","import React, {Component} from 'react'\r\nimport Chatbox from './Chatbox'\r\n\r\nclass PrivateRoom extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      searchingForGame: false,\r\n      playersInRoom: 0\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.socket.on('inWaiting', function(isWaiting){\r\n      this.setState({searchingForGame : isWaiting})\r\n    }.bind(this))\r\n    this.props.socket.on('privateRoomSize', function(size){\r\n      this.setState({playersInRoom : size})\r\n    }.bind(this))\r\n  }\r\n  componentWillUnmount(){\r\n    this.props.socket.off('inWaiting');\r\n    this.props.socket.off('privateRoomSize');\r\n  }\r\n\r\n  render(){\r\n    return(  \r\n      <div>\r\n        <div className='gameModes'>\r\n          <h1>Private Room: {this.props.privateRoom}</h1>\r\n          <h2>There is currently {this.state.playersInRoom} {this.state.playersInRoom === 1 ? 'user' : 'users'} in this room</h2>\r\n          <div className='gameMode'>\r\n            <div class=\"privateRoomButtons\">\r\n              <button onClick={this.props.findPrivateGame.bind(this)}>{this.state.searchingForGame ? \"Leave queue\" : \"Find a Game\"}</button> \r\n              <button onClick={this.props.leaveRoom.bind(this)}>Leave private room</button>\r\n            </div>\r\n              <Chatbox \r\n                socket={this.props.socket}\r\n                username={this.props.username}\r\n                chatMessages = {this.props.chatMessages}\r\n                updateChat ={(username,chatMessage) =>this.props.updateChat(username,chatMessage)}\r\n                roomName={this.props.privateRoom}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PrivateRoom;","import React, {Component} from 'react'\r\nimport Game from './Game';\r\nimport './App.css';\r\nimport socketIOClient from \"socket.io-client\";\r\nimport WelcomePage from './WelcomePage';\r\nimport ModeSelection from './ModeSelection';\r\nimport PrivateRoom from './PrivateRoom';\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      socket: socketIOClient(),\r\n      username: '',\r\n      soloGame: false,\r\n      privateRoom: '',\r\n      gameMatched:false,\r\n      gameData: {},\r\n      playersInPublicRoom: 0, \r\n      publicChatHistory : [],\r\n      privateChatHistory: []\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    this.state.socket.on('gameReady', function(gameData){\r\n      this.setState({\r\n        gameMatched:true,\r\n        gameData: gameData,\r\n      })\r\n    }.bind(this))\r\n    this.state.socket.on('publicRoomSize', function(size){\r\n      this.setState({playersInPublicRoom : size})\r\n    }.bind(this))\r\n    this.state.socket.on('updatePublicChat', function(username, chatMessage){\r\n      this.updatePublicChat(username, chatMessage);\r\n    }.bind(this))\r\n    this.state.socket.on('updatePrivateChat', function(username, chatMessage){\r\n      this.updatePrivateChat(username, chatMessage);\r\n    }.bind(this))\r\n  }\r\n\r\n  updatePublicChat(username,chatMessage){\r\n    this.setState({\r\n      publicChatHistory : this.state.publicChatHistory.concat(this.createChatMessage(username,chatMessage))\r\n    });\r\n  }\r\n\r\n  updatePrivateChat(username,chatMessage){\r\n    this.setState({\r\n      privateChatHistory : this.state.privateChatHistory.concat(this.createChatMessage(username,chatMessage))\r\n    });\r\n  }\r\n\r\n  createChatMessage(username, chatMessage){\r\n    return         <li key={username+Date.now()}>\r\n      <span className=\"chatUsername\">{username}:</span>\r\n      <span className=\"chatMessage\">{chatMessage}</span>\r\n    </li>\r\n  }\r\n\r\n  findGame(){\r\n    this.setState({gameMatched: false})\r\n    this.state.socket.emit('toggleMatchmaking', this.state.privateRoom)\r\n  }\r\n\r\n  findSoloGame(){\r\n    this.setState({soloGame: true, gameMatched: false})\r\n    this.state.socket.emit(\"soloGame\")\r\n  }\r\n\r\n  joinPrivateRoom(room){\r\n    this.state.socket.emit('joinPrivateRoom', room)\r\n    this.setState({\r\n      gameMatched: false,\r\n      privateRoom: room,\r\n    })\r\n  }\r\n\r\n  leavePrivateRoom(room){\r\n    this.state.socket.emit('leavePrivateRoom', room)\r\n    this.setState({\r\n      privateRoom: '',\r\n      privateChatHistory: []\r\n    })\r\n  }\r\n\r\n  leaveGame(){  \r\n    this.setState({\r\n      soloGame: false,\r\n      gameMatched:false,\r\n      words: []\r\n    })\r\n  }\r\n  playAgain(){\r\n    if(this.state.soloGame){\r\n      this.state.socket.emit(\"soloGame\")\r\n    }\r\n    else{\r\n      this.findGame()\r\n    }\r\n  }\r\n\r\n  render(){\r\n    if(this.state.username === ''){\r\n      return(\r\n        <div className=\"App\">\r\n          <WelcomePage \r\n            storeUsername={(username) => this.setState({username:username})}\r\n            socket={this.state.socket}/>\r\n        </div>\r\n      )\r\n    }\r\n    if(this.state.gameMatched){\r\n      return (\r\n        <div className=\"App\">\r\n          <Game \r\n            soloGame ={this.state.soloGame}\r\n            playAgain={()=>this.playAgain()}\r\n            username={this.state.username}\r\n            gameData={this.state.gameData} \r\n            socket={this.state.socket}\r\n            leaveGame={()=>this.leaveGame()}  />\r\n        </div>\r\n      )\r\n    }\r\n    else{\r\n      if(this.state.privateRoom !== ''){\r\n        return(\r\n          <div className=\"App\">\r\n            <PrivateRoom\r\n              socket = {this.state.socket}\r\n              username = {this.state.username}\r\n              privateRoom = {this.state.privateRoom}\r\n              findPrivateGame = {()=>this.findGame()}\r\n              leaveRoom = {()=>this.leavePrivateRoom()}\r\n              chatMessages ={this.state.privateChatHistory}\r\n              updateChat ={(username,chatMessage) => this.updatePrivateChat(username,chatMessage)}/>\r\n          </div>\r\n        )\r\n      }\r\n      return (\r\n        <div className=\"App\">\r\n          <ModeSelection \r\n            socket={this.state.socket}\r\n            username = {this.state.username}\r\n            playersInPublicRoom ={this.state.playersInPublicRoom}\r\n            findGame ={()=>this.findGame()}\r\n            findSoloGame={()=>this.findSoloGame()}\r\n            joinPrivateRoom={(room)=>this.joinPrivateRoom(room)}\r\n            chatMessages={this.state.publicChatHistory}\r\n            updateChat ={(username,chatMessage) => this.updatePublicChat(username,chatMessage)}\r\n            />\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}