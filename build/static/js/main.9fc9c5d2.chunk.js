(this["webpackJsonptyping-head-to-head"]=this["webpackJsonptyping-head-to-head"]||[]).push([[0],{20:function(e,t,s){},42:function(e,t,s){},75:function(e,t,s){"use strict";s.r(t);var a=s(1),i=s.n(a),n=s(36),o=s.n(n),r=(s(42),s(2)),c=s(3),p=s(5),h=s(4),l=(s(20),s(0)),u=function(e){Object(p.a)(s,e);var t=Object(h.a)(s);function s(){return Object(r.a)(this,s),t.apply(this,arguments)}return Object(c.a)(s,[{key:"render",value:function(){for(var e=[],t=0;t<this.props.words.length;t++){var s="word ";t<this.props.progress?s+=this.props.opponent?"opponentCompletedWord":"playerCompletedWord":t!==this.props.progress||this.props.opponent||this.props.opponent||(s+="currentWord"),e.push(Object(l.jsx)("li",{className:s,children:this.props.words[t]},t))}return Object(l.jsx)("ul",{children:e})}}]),s}(a.Component),d=function(e){Object(p.a)(s,e);var t=Object(h.a)(s);function s(){return Object(r.a)(this,s),t.apply(this,arguments)}return Object(c.a)(s,[{key:"render",value:function(){if(this.props.soloGame)return Object(l.jsx)("div",{});var e=Object(l.jsx)("div",{children:Object(l.jsxs)("span",{className:"passageTitle",children:["This was a passage from ",this.props.passageTitle]})});return Object(l.jsxs)("div",{children:[Object(l.jsxs)("div",{children:[Object(l.jsx)("h2",{children:this.props.username}),Object(l.jsxs)("div",{className:"playerStatistics",children:[Object(l.jsx)("span",{children:this.props.winLoss}),Object(l.jsxs)("span",{children:["Record WPM ",this.props.recordWPM]})]}),Object(l.jsxs)("h2",{children:[this.props.wpm," WPM"]})]}),Object(l.jsxs)("div",{className:"typingProgress",children:[Object(l.jsx)(u,{opponent:this.props.opponent,words:this.props.words,progress:this.props.progress}),this.props.typingFinished&&!this.props.soloGame?e:""]})]})}}]),s}(a.Component),m=function(e){Object(p.a)(s,e);var t=Object(h.a)(s);function s(){return Object(r.a)(this,s),t.apply(this,arguments)}return Object(c.a)(s,[{key:"render",value:function(){return this.props.typingFinished?Object(l.jsxs)("div",{className:"gameFinishedDialogue",children:[Object(l.jsx)("h1",{children:this.props.raceWinner?"You win!":"You lose"}),Object(l.jsx)("button",{onClick:this.props.playAgain,children:"Play again"}),Object(l.jsx)("button",{onClick:this.props.leaveGame,children:"Leave game"})]}):this.props.gameStarted?Object(l.jsx)("div",{children:Object(l.jsx)("input",{id:"TypingInput",onInput:this.props.compareInput,autoComplete:"off"})}):Object(l.jsx)("div",{children:Object(l.jsx)("input",{id:"TypingInput",disabled:"disabled"})})}}]),s}(a.Component),j=function(e){Object(p.a)(s,e);var t=Object(h.a)(s);function s(){return Object(r.a)(this,s),t.apply(this,arguments)}return Object(c.a)(s,[{key:"displayMinutesAndSeconds",value:function(e){var t=Math.floor(e/6e4),s=(e%6e4/1e3).toFixed(0);return 60===s?t+1+":00":t+":"+(s<10?"0":"")+s}},{key:"render",value:function(){return this.props.gameStarted?Object(l.jsx)("h1",{children:this.displayMinutesAndSeconds(this.props.typingTimer)}):Object(l.jsxs)("h1",{children:["Game starting in ",this.props.gameCountDown," "]})}}]),s}(a.Component),b=function(e){Object(p.a)(s,e);var t=Object(h.a)(s);function s(e){var a;return Object(r.a)(this,s),(a=t.call(this,e)).state={playerPosition:0,opponentPosition:0,gameCountDown:5,gameStarted:!1,typingFinished:!1,raceWinner:!1,typingStartTime:0,typingEndTime:0,typingTimer:0,playerWPM:0,opponentWPM:0},a}return Object(c.a)(s,[{key:"componentDidMount",value:function(){this.props.socket.on("updateOpponentPosition",function(e){this.setState({opponentPosition:e})}.bind(this)),this.props.socket.on("endRace",function(e){var t=this.props.socket.id===e;this.props.soloGame||this.props.socket.emit("raceStats",this.calculateWPM(this.state.playerPosition),t),this.setState({typingFinished:!0,raceWinner:t,opponentPosition:t?this.state.opponentPosition:this._words.length,playerWPM:this.calculateWPM(this.state.playerPosition),opponentWPM:this.calculateWPM(t?this.state.opponentPosition:this._words.length)})}.bind(this)),this.props.socket.on("countdown",function(e){var t=this,s=e<1;this.setState({gameCountDown:e,gameStarted:s,typingStartTime:Date.now()}),s&&(this.timer=setInterval((function(){t.state.typingFinished?clearInterval(t.timer):t.setState({typingTimer:Date.now()-t.state.typingStartTime,playerWPM:t.calculateWPM(t.state.playerPosition),opponentWPM:t.calculateWPM(t.state.opponentPosition)})}),1e3),document.getElementById("TypingInput").focus())}.bind(this))}},{key:"componentWillUnmount",value:function(){clearInterval(this.timer),this.props.socket.off("updateOpponentPosition"),this.props.socket.off("endRace"),this.props.socket.off("countdown")}},{key:"calculateWPM",value:function(e){var t=Date.now(),s=this._words.slice(0,e).join(" ").length/5;return Math.round(s/((t-this.state.typingStartTime)/6e4))}},{key:"compareInput",value:function(e){var t=e.target.value,s=t.substring(e.target.value.length-1,t.length),a=this._words[this.state.playerPosition];if(" "===s&&t.substring(0,t.length-1)===a)return e.target.value="",e.target.style.background="white",this.props.socket.emit("wordComplete",this.state.playerPosition+1),void this.setState({playerPosition:this.state.playerPosition+1});this.state.playerPosition+1>=this._words.length&&t===a&&(this.props.socket.emit("raceComplete"),this.setState({playerPosition:this.state.playerPosition+1,typingFinished:!0,typingEndTime:Date.now(),raceWinner:!0})),a.substring(0,t.length)!==t?e.target.style.background="red":e.target.style.background="white"}},{key:"playAgain",value:function(){this.setState({playerPosition:0,opponentPosition:0,gameCountDown:5,gameStarted:!1,typingFinished:!1,raceWinner:!1,typingStartTime:0,typingEndTime:0,typingTimer:0,playerWPM:0,opponentWPM:0}),this.props.playAgain()}},{key:"render",value:function(){return this._words=this.props.gameData.passage.text.split(" "),this._userData=this.props.gameData.playerOne.id===this.props.socket.id?this.props.gameData.playerOne:this.props.gameData.playerTwo,this._opponentData=this.props.gameData.playerOne.id!==this.props.socket.id?this.props.gameData.playerOne:this.props.gameData.playerTwo,this._passageTitle=this.props.gameData.passage.title,Object(l.jsxs)("div",{className:"Game",children:[Object(l.jsx)(j,{gameStarted:this.state.gameStarted,gameCountDown:this.state.gameCountDown,typingTimer:this.state.typingTimer}),Object(l.jsxs)("div",{className:"players",children:[Object(l.jsxs)("div",{className:"playerOne",children:[Object(l.jsx)(d,{opponent:!1,username:this.props.username,wpm:this.state.playerWPM,recordWPM:this._userData.recordWPM,winLoss:this._userData.winLoss,progress:this.state.playerPosition,words:this._words,passageTitle:this._passageTitle,typingFinished:this.state.typingFinished}),Object(l.jsx)("div",{children:Object(l.jsx)(m,{typingFinished:this.state.typingFinished,raceWinner:this.state.raceWinner,playAgain:this.playAgain.bind(this),leaveGame:this.props.leaveGame,gameStarted:this.state.gameStarted,compareInput:this.compareInput.bind(this)})})]}),Object(l.jsx)("div",{children:this.props.soloGame?Object(l.jsx)("span",{}):Object(l.jsx)("span",{className:"versus",children:"VS"})}),Object(l.jsx)("div",{className:this.props.soloGame?"":"playerTwo",children:Object(l.jsx)(d,{opponent:!0,username:this._opponentData.username,recordWPM:this._opponentData.recordWPM,winLoss:this._opponentData.winLoss,wpm:this.state.opponentWPM,progress:this.state.opponentPosition,words:this._words,soloGame:this.props.soloGame})})]})]})}}]),s}(a.Component),g=s(37),v=s.n(g),y=function(e){Object(p.a)(s,e);var t=Object(h.a)(s);function s(){return Object(r.a)(this,s),t.apply(this,arguments)}return Object(c.a)(s,[{key:"setUsername",value:function(e){e.preventDefault();var t=document.getElementById("username").value.trim();""===t||t.length>12||(this.props.storeUsername(t),this.props.socket.emit("setUsername",t))}},{key:"checkUsernameLength",value:function(e){e.target.value.length>12&&(e.target.value=e.target.value.substring(0,12))}},{key:"render",value:function(){return Object(l.jsxs)("div",{id:"welcomePage",children:[Object(l.jsx)("h1",{children:"Typing Head-To-Head"}),Object(l.jsx)("p",{children:"Typing Head-To-Head is a game that can be played solo or against an opponent. Players are given a passage of text and are challenged to type it as quickly as possible"}),Object(l.jsx)("p",{children:"Enter a username to play!"}),Object(l.jsx)("div",{children:Object(l.jsxs)("form",{onSubmit:this.setUsername.bind(this),children:[Object(l.jsx)("input",{id:"username",placeholder:"Your username",onInput:this.checkUsernameLength.bind(this)}),Object(l.jsx)("button",{type:"submit",children:"Enter"})]})})]})}}]),s}(a.Component),O=function(e){Object(p.a)(s,e);var t=Object(h.a)(s);function s(){return Object(r.a)(this,s),t.apply(this,arguments)}return Object(c.a)(s,[{key:"componentDidUpdate",value:function(){var e=document.getElementById("chatMessages");e.scrollTop=e.scrollHeight}},{key:"submitChatMessage",value:function(e){e.preventDefault();var t=document.getElementById("chatInput").value.trim();""!==t&&(this.props.updateChat(this.props.username,t),this.props.socket.emit("sendChatMessage",this.props.username,t,this.props.roomName),document.getElementById("chatInput").value="")}},{key:"render",value:function(){return Object(l.jsxs)("div",{className:"chatbox",children:[Object(l.jsxs)("ul",{id:"chatMessages",children:[Object(l.jsx)("li",{className:"systemChatMessage",children:"Welcome to the chat room, please be pleasant!"}),this.props.chatMessages]}),Object(l.jsxs)("form",{onSubmit:this.submitChatMessage.bind(this),children:[Object(l.jsx)("input",{id:"chatInput",autoComplete:"off"}),Object(l.jsx)("button",{children:"Send"})]})]})}}]),s}(a.Component),f=function(e){Object(p.a)(s,e);var t=Object(h.a)(s);function s(e){var a;return Object(r.a)(this,s),(a=t.call(this,e)).state={searchingForGame:!1,privateRoomNameError:!1},a}return Object(c.a)(s,[{key:"componentDidMount",value:function(){this.props.socket.on("inWaiting",function(e){this.setState({searchingForGame:e})}.bind(this))}},{key:"componentWillUnmount",value:function(){this.props.socket.off("inWaiting")}},{key:"joinPrivateRoom",value:function(e){e.preventDefault();var t=document.getElementById("privateRoom");""!==t.value.trim()&&(this.isIllegalRoomName(t.value.trim())?this.setState({privateRoomNameError:!0}):(this.props.joinPrivateRoom(t.value.trim()),t.value=""))}},{key:"isIllegalRoomName",value:function(e){var t=/\bpublicWaitingRoom\b/.test(e),s=/-MATCHMAKING$/.test(e);return t||s}},{key:"render",value:function(){var e=this;return Object(l.jsxs)("div",{children:[Object(l.jsx)("h1",{children:"Typing Head-To-Head"}),Object(l.jsxs)("h2",{children:[this.props.playersInPublicRoom," ",1===this.props.playersInPublicRoom?"user":"users"," connected"]}),Object(l.jsxs)("div",{className:"gameModes",children:[Object(l.jsxs)("div",{className:"gameMode",children:[Object(l.jsx)("h2",{children:"Public Head-To-Head"}),Object(l.jsxs)("div",{className:"gameDescription",children:[Object(l.jsxs)("div",{children:[Object(l.jsx)("p",{children:"Match against another random player in a head-to-head battle to determine who is the superior typist!"}),Object(l.jsx)("p",{children:"The outcome of games will count towards your total number of Wins and Losses. Your personal best typing speed will also be recorded"})]}),Object(l.jsx)("button",{className:"playButton",onClick:this.props.findGame.bind(this),children:this.state.searchingForGame?"Leave queue":"Find a Game"})]}),Object(l.jsx)(O,{socket:this.props.socket,username:this.props.username,chatMessages:this.props.chatMessages,updateChat:function(t,s){return e.props.updateChat(t,s)},roomName:""})]}),Object(l.jsxs)("div",{className:"gameMode",children:[Object(l.jsx)("h2",{children:"Solo Practice Game"}),Object(l.jsxs)("div",{className:"gameDescription",children:[Object(l.jsxs)("div",{children:[Object(l.jsx)("p",{children:"Play a game by yourself to hone your typing skills, warm up or just to play without the stress of competition"}),Object(l.jsxs)("p",{children:["The outcome of games will ",Object(l.jsx)("span",{className:"underline",children:"not"})," count towards your total number of Wins and Losses. Your personal best typing speed will ",Object(l.jsx)("span",{className:"underline",children:"not"})," be recorded"]})]}),Object(l.jsx)("button",{onClick:this.props.findSoloGame.bind(this),className:"playButton",children:"Play Solo"})]})]}),Object(l.jsxs)("div",{className:"gameMode",children:[Object(l.jsx)("h2",{children:"Join a Private Gameroom"}),Object(l.jsx)("div",{className:"gameDescription",children:Object(l.jsxs)("div",{children:[Object(l.jsx)("p",{children:"Filter your matchmaking to only play against players in the same private room as you."}),Object(l.jsx)("p",{children:"The outcome of games will count towards your total number of Wins and Losses. Your personal best typing speed will also be recorded"}),Object(l.jsxs)("form",{onSubmit:this.joinPrivateRoom.bind(this),children:[Object(l.jsx)("input",{id:"privateRoom",placeholder:"Room name"}),Object(l.jsx)("button",{className:"playButton",type:"submit",children:"Join"}),this.state.privateRoomNameError?Object(l.jsx)("span",{className:"errorMessage",children:"Your room name contains a reserved phrase. Please select a new name"}):""]})]})})]})]})]})}}]),s}(a.Component),x=function(e){Object(p.a)(s,e);var t=Object(h.a)(s);function s(e){var a;return Object(r.a)(this,s),(a=t.call(this,e)).state={searchingForGame:!1,playersInRoom:0},a}return Object(c.a)(s,[{key:"componentDidMount",value:function(){this.props.socket.on("inWaiting",function(e){this.setState({searchingForGame:e})}.bind(this)),this.props.socket.on("privateRoomSize",function(e){this.setState({playersInRoom:e})}.bind(this))}},{key:"componentWillUnmount",value:function(){this.props.socket.off("inWaiting"),this.props.socket.off("privateRoomSize")}},{key:"render",value:function(){var e=this;return Object(l.jsx)("div",{children:Object(l.jsxs)("div",{className:"gameModes",children:[Object(l.jsxs)("h1",{children:["Private Room: ",this.props.privateRoom]}),Object(l.jsxs)("h2",{children:["There is currently ",this.state.playersInRoom," ",1===this.state.playersInRoom?"user":"users"," in this room"]}),Object(l.jsxs)("div",{className:"gameMode",children:[Object(l.jsxs)("div",{class:"privateRoomButtons",children:[Object(l.jsx)("button",{onClick:this.props.findPrivateGame.bind(this),children:this.state.searchingForGame?"Leave queue":"Find a Game"}),Object(l.jsx)("button",{onClick:this.props.leaveRoom.bind(this),children:"Leave private room"})]}),Object(l.jsx)(O,{socket:this.props.socket,username:this.props.username,chatMessages:this.props.chatMessages,updateChat:function(t,s){return e.props.updateChat(t,s)},roomName:this.props.privateRoom})]})]})})}}]),s}(a.Component),k=function(e){Object(p.a)(s,e);var t=Object(h.a)(s);function s(e){var a;return Object(r.a)(this,s),(a=t.call(this,e)).state={socket:v()(),username:"",soloGame:!1,privateRoom:"",gameMatched:!1,gameData:{},playersInPublicRoom:0,publicChatHistory:[],privateChatHistory:[]},a}return Object(c.a)(s,[{key:"componentDidMount",value:function(){this.state.socket.on("gameReady",function(e){this.setState({gameMatched:!0,gameData:e})}.bind(this)),this.state.socket.on("publicRoomSize",function(e){this.setState({playersInPublicRoom:e})}.bind(this)),this.state.socket.on("updatePublicChat",function(e,t){console.log("public"),this.updatePublicChat(e,t)}.bind(this)),this.state.socket.on("updatePrivateChat",function(e,t){console.log("private"),this.updatePrivateChat(e,t)}.bind(this))}},{key:"updatePublicChat",value:function(e,t){this.setState({publicChatHistory:this.state.publicChatHistory.concat(this.createChatMessage(e,t))})}},{key:"updatePrivateChat",value:function(e,t){this.setState({privateChatHistory:this.state.privateChatHistory.concat(this.createChatMessage(e,t))})}},{key:"createChatMessage",value:function(e,t){return Object(l.jsxs)("li",{children:[Object(l.jsxs)("span",{className:"chatUsername",children:[e,":"]}),Object(l.jsx)("span",{className:"chatMessage",children:t})]},e+Date.now())}},{key:"findGame",value:function(){this.setState({gameMatched:!1}),this.state.socket.emit("toggleMatchmaking",this.state.privateRoom)}},{key:"findSoloGame",value:function(){this.setState({soloGame:!0,gameMatched:!1}),this.state.socket.emit("soloGame")}},{key:"joinPrivateRoom",value:function(e){this.state.socket.emit("joinPrivateRoom",e),this.setState({gameMatched:!1,privateRoom:e})}},{key:"leavePrivateRoom",value:function(e){this.state.socket.emit("leavePrivateRoom",e),this.setState({privateRoom:"",privateChatHistory:[]})}},{key:"leaveGame",value:function(){this.setState({soloGame:!1,gameMatched:!1,words:[]})}},{key:"playAgain",value:function(){this.state.soloGame?this.state.socket.emit("soloGame"):this.findGame()}},{key:"render",value:function(){var e=this;return""===this.state.username?Object(l.jsx)("div",{className:"App",children:Object(l.jsx)(y,{storeUsername:function(t){return e.setState({username:t})},socket:this.state.socket})}):this.state.gameMatched?Object(l.jsx)("div",{className:"App",children:Object(l.jsx)(b,{soloGame:this.state.soloGame,playAgain:function(){return e.playAgain()},username:this.state.username,gameData:this.state.gameData,socket:this.state.socket,leaveGame:function(){return e.leaveGame()}})}):""!==this.state.privateRoom?Object(l.jsx)("div",{className:"App",children:Object(l.jsx)(x,{socket:this.state.socket,username:this.state.username,privateRoom:this.state.privateRoom,findPrivateGame:function(){return e.findGame()},leaveRoom:function(){return e.leavePrivateRoom()},chatMessages:this.state.privateChatHistory,updateChat:function(t,s){return e.updatePrivateChat(t,s)}})}):Object(l.jsx)("div",{className:"App",children:Object(l.jsx)(f,{socket:this.state.socket,username:this.state.username,playersInPublicRoom:this.state.playersInPublicRoom,findGame:function(){return e.findGame()},findSoloGame:function(){return e.findSoloGame()},joinPrivateRoom:function(t){return e.joinPrivateRoom(t)},chatMessages:this.state.publicChatHistory,updateChat:function(t,s){return e.updatePublicChat(t,s)}})})}}]),s}(a.Component),P=function(e){e&&e instanceof Function&&s.e(3).then(s.bind(null,76)).then((function(t){var s=t.getCLS,a=t.getFID,i=t.getFCP,n=t.getLCP,o=t.getTTFB;s(e),a(e),i(e),n(e),o(e)}))};o.a.render(Object(l.jsx)(i.a.StrictMode,{children:Object(l.jsx)(k,{})}),document.getElementById("root")),P()}},[[75,1,2]]]);
//# sourceMappingURL=main.9fc9c5d2.chunk.js.map